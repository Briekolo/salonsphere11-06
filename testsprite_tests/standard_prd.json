{
  "meta": {
    "project": "SalonSphere",
    "date": "2025-07-30",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "SalonSphere is an all-in-one multi-tenant SaaS platform designed for beauty salon management. It streamlines operations including appointment scheduling, client and staff management, inventory tracking, and business analytics, all supported by real-time updates and integrated payment processing.",
  "core_goals": [
    "Provide a seamless, role-based multi-tenant platform for salon business operations.",
    "Enable efficient appointment scheduling with conflict detection and multiple calendar views.",
    "Maintain comprehensive client and staff management features with detailed profiles and activity tracking.",
    "Offer intuitive inventory and product management with low stock alerts and purchase order capabilities.",
    "Deliver actionable business insights through dashboards with real-time metrics and revenue analytics.",
    "Support automated communications and in-app notifications for enhanced user engagement.",
    "Ensure secure and compliant management of subscriptions and payment processing via Mollie integration.",
    "Provide a public client booking portal for easy service selection and appointment booking.",
    "Maintain strict tenant isolation and GDPR compliant data security."
  ],
  "key_features": [
    "Multi-provider authentication and role-based access control for Admin, Staff, and Client users.",
    "Interactive appointment booking system with availability checking, overlap detection, recurring appointments, and calendar views.",
    "Robust client management database with status tracking, appointment history, and filters.",
    "Comprehensive staff management including availability scheduling, service assignments, and performance tracking.",
    "Inventory management system with stock monitoring, low stock alerts, and purchase order management.",
    "Service and treatment catalog management with pricing, categories, duration, and staff assignments.",
    "Rich dashboard and analytics with KPIs, revenue data, appointment stats, and growth indicators.",
    "Subscription and billing management integrated with Mollie payment gateway.",
    "Email automation features including templates, appointment reminders, and notifications.",
    "Real-time updates for appointments, inventory, and notifications using Supabase Realtime.",
    "Business settings configuration including hours, booking rules, taxes, and domain management.",
    "Public-facing client booking portal with service selection and appointment scheduling.",
    "Google Calendar two-way integration for syncing appointments."
  ],
  "user_flow_summary": [
    "Admin logs into the system, manages staff profiles, business settings, and reviews business analytics dashboard.",
    "Staff logs in, manages personal availability, views assigned appointments, and accesses client details.",
    "Clients access the public booking portal, select services, choose available times, and confirm appointments.",
    "Appointment scheduling includes checking staff availability, preventing overlaps, and issuing reminders.",
    "Inventory managers track stock levels, receive low stock alerts, and manage purchase orders.",
    "System sends automated emails for appointment reminders and notifications based on user preferences.",
    "Subscription management through a dedicated interface with payment via Mollie.",
    "Real-time data updates propagate instantly across the app for notifications, booking changes, and inventory status."
  ],
  "validation_criteria": [
    "User authentication and role-based authorization must enforce tenant isolation with multi-tenant row-level security.",
    "Appointment booking prevents overlaps and respects availability schedules.",
    "Client and staff data integrity is maintained with search, filter, and update functionalities working correctly.",
    "Inventory stock levels update accurately with alerts and purchase order workflows functioning as expected.",
    "Dashboard metrics accurately reflect real-time data and revenue analytics.",
    "Email automation triggers correctly for reminders and notification templates.",
    "Subscription and billing processes handle payments reliably via Mollie with invoice generation.",
    "Google Calendar integration syncs appointments bidirectionally without data loss.",
    "Real-time updates for notifications, appointments, and inventory appear instantaneously to end users.",
    "Application adheres to GDPR compliance and secure payment standards throughout."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js 15.3.3",
      "React 18.3.1",
      "Supabase (PostgreSQL, Auth, Realtime)",
      "TanStack Query v5",
      "Jotai (state management)",
      "Tailwind CSS",
      "React Hook Form",
      "Zod (validation)",
      "Playwright (E2E testing)",
      "Storybook",
      "@react-pdf/renderer",
      "Mollie (payments)",
      "date-fns",
      "Lucide React (icons)"
    ],
    "features": [
      {
        "name": "Authentication & Authorization",
        "description": "Multi-tenant authentication with role-based access control (admin, staff, client)",
        "files": [
          "components/auth/AuthProvider.tsx",
          "components/auth/SignInForm.tsx",
          "components/auth/SignUpForm.tsx",
          "components/staff/StaffAuthProvider.tsx",
          "components/client/auth/ClientAuthProvider.tsx",
          "lib/hooks/useStaffAuth.ts",
          "lib/hooks/useClientAuth.ts",
          "lib/services/clientAuthService.ts",
          "middleware.ts"
        ]
      },
      {
        "name": "Appointment Booking System",
        "description": "Complete booking management with availability checking, overlap detection, and calendar views",
        "files": [
          "components/agenda/CalendarView.tsx",
          "components/agenda/EnhancedCalendarView.tsx",
          "components/agenda/AppointmentCard.tsx",
          "components/agenda/AppointmentDashboard.tsx",
          "lib/hooks/useBookings.ts",
          "lib/services/bookingService.ts",
          "lib/services/availabilityService.ts",
          "lib/utils/appointment-overlap.ts",
          "app/appointments/page.tsx"
        ]
      },
      {
        "name": "Client Management",
        "description": "Client database with status tracking, appointment history, and search functionality",
        "files": [
          "components/clients/ClientsFilters.tsx",
          "components/clients/ClientsStats.tsx",
          "components/clients/ClientStatusBadge.tsx",
          "lib/hooks/useClients.ts",
          "lib/services/clientService.ts",
          "lib/services/clientStatusService.ts",
          "app/clients/page.tsx"
        ]
      },
      {
        "name": "Staff Management",
        "description": "Staff profiles, schedules, availability, and service assignments",
        "files": [
          "components/staff/StaffLayout.tsx",
          "components/staff/StaffSidebar.tsx",
          "components/staff/dashboard/StaffDashboard.tsx",
          "components/staff/availability/StaffAvailabilityManager.tsx",
          "lib/hooks/useStaffAvailability.ts",
          "lib/hooks/useStaffSchedules.ts",
          "lib/services/staffBookingService.ts",
          "app/admin/staff/page.tsx"
        ]
      },
      {
        "name": "Inventory Management",
        "description": "Product tracking, stock management, low stock alerts, and purchase orders",
        "files": [
          "components/inventory/InventoryContent.tsx",
          "components/inventory/InventoryStats.tsx",
          "components/inventory/LowStockBanner.tsx",
          "components/inventory/ProductForm.tsx",
          "lib/hooks/useInventoryItems.ts",
          "lib/hooks/usePurchaseOrders.ts",
          "lib/services/inventoryService.ts",
          "app/inventory/page.tsx"
        ]
      },
      {
        "name": "Treatment & Service Management",
        "description": "Service catalog with categories, pricing, duration, and staff assignments",
        "files": [
          "components/treatments/CategoryManagement.tsx",
          "components/treatments/TreatmentsStats.tsx",
          "components/treatments/StaffAssignmentsV2.tsx",
          "lib/hooks/useServices.ts",
          "lib/hooks/useTreatmentCategories.ts",
          "lib/services/serviceService.ts",
          "lib/services/treatmentSeriesService.ts",
          "app/treatments/page.tsx"
        ]
      },
      {
        "name": "Dashboard & Analytics",
        "description": "Business metrics, revenue analytics, appointment stats, and growth indicators",
        "files": [
          "components/dashboard/AnalyticsDashboard.tsx",
          "components/dashboard/KeyMetrics.tsx",
          "components/dashboard/RevenueAnalytics.tsx",
          "components/dashboard/GrowthIndicators.tsx",
          "lib/hooks/useTenantMetrics.ts",
          "lib/hooks/useRevenueData.ts",
          "lib/hooks/useExpectedRevenueData.ts",
          "app/page.tsx"
        ]
      },
      {
        "name": "Subscription & Billing",
        "description": "Multi-tenant subscription management with Mollie payment integration",
        "files": [
          "lib/services/subscriptionService.ts",
          "lib/services/mollieService.ts",
          "lib/services/paymentReconciliationService.ts",
          "lib/hooks/useSubscription.ts",
          "lib/hooks/usePaymentPoller.ts",
          "app/subscription/page.tsx",
          "app/admin/subscription/page.tsx"
        ]
      },
      {
        "name": "Email Automation",
        "description": "Automated email templates, appointment reminders, and notification system",
        "files": [
          "lib/services/emailService.ts",
          "lib/services/emailTemplateService.ts",
          "lib/hooks/useEmailAutomation.ts",
          "lib/hooks/useEmailTemplates.ts",
          "app/email-automation/page.tsx",
          "app/admin/notifications/templates/[id]/edit/page.tsx"
        ]
      },
      {
        "name": "Notification System",
        "description": "In-app notifications with real-time updates and preferences management",
        "files": [
          "components/settings/NotificationPreferencesTab.tsx",
          "lib/services/notificationService.ts",
          "lib/services/notificationTriggers.ts",
          "lib/hooks/useNotifications.ts",
          "lib/hooks/useNotificationSettings.ts",
          "app/notifications/page.tsx"
        ]
      },
      {
        "name": "Business Settings",
        "description": "Salon configuration including hours, booking rules, tax settings, and domain management",
        "files": [
          "components/settings/BusinessInfoTab.tsx",
          "components/settings/OpeningHoursTab.tsx",
          "components/settings/BookingRulesTab.tsx",
          "components/settings/TaxSettingsTab.tsx",
          "lib/hooks/useBusinessInfo.ts",
          "lib/hooks/useBusinessHours.ts",
          "lib/services/domainService.ts",
          "app/settings/page.tsx"
        ]
      },
      {
        "name": "Client Booking Portal",
        "description": "Public-facing booking interface with service selection and appointment scheduling",
        "files": [
          "app/(client)/[domain]/layout.tsx",
          "app/(client)/[domain]/services/page.tsx",
          "app/(client)/[domain]/book/page.tsx",
          "app/(client)/[domain]/book/[serviceId]/page.tsx",
          "lib/client/booking-service.ts",
          "lib/client/tenant-resolver.ts",
          "components/client/layout/ClientHeader.tsx"
        ]
      },
      {
        "name": "Google Calendar Integration",
        "description": "Two-way sync with Google Calendar for appointments",
        "files": [
          "lib/services/googleCalendarService.ts",
          "lib/hooks/useGoogleCalendar.ts",
          "app/api/google-calendar/sync-appointment/route.ts",
          "app/api/auth/google/callback/route.ts"
        ]
      },
      {
        "name": "Real-time Updates",
        "description": "Live updates for appointments, inventory, and notifications using Supabase Realtime",
        "files": [
          "components/providers/RealtimeProvider.tsx",
          "components/client/providers/ClientRealtimeProvider.tsx",
          "lib/hooks/useTenantRealtime.ts",
          "lib/hooks/useInventoryRealtime.ts"
        ]
      },
      {
        "name": "Multi-tenant Architecture",
        "description": "Row-level security with tenant isolation and custom domain support",
        "files": [
          "lib/hooks/useTenant.ts",
          "lib/utils/tenant.ts",
          "lib/services/validationService.ts",
          "middleware.ts"
        ]
      }
    ]
  }
}
